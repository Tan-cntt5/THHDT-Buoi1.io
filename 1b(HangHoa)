package Bai1b;

import java.time.LocalDate;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.util.Scanner;
import java.time.format.DateTimeFormatter;
public class HangHoa {
	private String maHang;
    private String tenHang;
    private int donGia;
    private LocalDate ngaySanXuat = LocalDate.now();
    private LocalDate ngayHetHan = LocalDate.now();

    public HangHoa(String maHang, String tenHang, int donGia, LocalDate ngaySanXuat,LocalDate ngayHetHan) {
        this.maHang = maHang;
        if (maHang.isEmpty()) {
            throw new IllegalArgumentException("Mã hàng không được để rỗng.");
        }
        if (!tenHang.isEmpty()) {
            this.tenHang = tenHang;
        this.donGia = donGia >= 0 ? donGia : 0;
        if (ngaySanXuat.isBefore(LocalDate.now())) {
            this.ngaySanXuat = ngaySanXuat;
        }
        if (ngayHetHan.isAfter(ngaySanXuat)) {
            this.ngayHetHan = ngayHetHan;
        }
        }
        
    }
        public HangHoa(String maHang) {
            if (maHang.isEmpty()) {
                throw new IllegalArgumentException("Mã hàng không được để trống!");
            }
            this.maHang = maHang;
        }

        public String getmaHang() {
            return maHang;
        }
        public void setmaHang(String maHang) {
            this.maHang = maHang;
        }

        public String gettenHang() {
            return tenHang;
        }

        public void setTenHang(String tenHang) {
            if (!tenHang.isEmpty()) {
                this.tenHang = tenHang;
            }
        }

        public double getDonGia() {
            return donGia;
        }

        public void setDonGia(int donGia) {
            if (donGia >= 0) {
                this.donGia = donGia;
            }
        }

        public LocalDate getNgaySanXuat() {
            return ngaySanXuat;
        }

        public void setNgaySanXuat(LocalDate ngaySanXuat) {
            if (ngaySanXuat.isBefore(LocalDate.now())) {
                this.ngaySanXuat = ngaySanXuat;
            }
        }

        public LocalDate getNgayHetHan() {
            return ngayHetHan;
        }

        public void setNgayHetHan(LocalDate ngayHetHan) {
            if (ngayHetHan.isAfter(ngaySanXuat)) {
                this.ngayHetHan = ngayHetHan;
            }
        }
        public boolean isExpired() {
            LocalDate currentDate = LocalDate.now();
            return currentDate.isAfter(ngayHetHan) || currentDate.isEqual(ngayHetHan);
        }
        
        public boolean hetHan() {
        	return ngayHetHan.isBefore(LocalDate.now()) ? true : false;
        }
        @Override
        public String toString() {
            String expiredStatus = hetHan() ? "Hàng đã hết hạn" : "Hàng chưa hết hạn";
            DecimalFormat df = new DecimalFormat("#,###");
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            String result = String.format("%s - %s: %s đ - Ngày sản xuất: %s - Ngày hết hạn: %s - %s",
                    maHang, tenHang, df.format(donGia), ngaySanXuat.format(dtf), ngayHetHan.format(dtf), expiredStatus);
            return result;

    }
}

    
 
